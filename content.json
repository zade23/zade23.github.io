{"meta":{"title":"ANdRoid's BLOG","subtitle":"MaTRix","description":"","author":"Android","url":"https://zade23.github.io","root":"/"},"pages":[{"title":"关于","date":"2023-05-18T08:34:11.674Z","updated":"2023-05-18T08:34:11.674Z","comments":false,"path":"about/index.html","permalink":"https://zade23.github.io/about/index.html","excerpt":"","text":"Android，单机游戏(尤其是魂类)爱好者，游戏行业的一名算法工程师，现居广东 感兴趣的技术：扩散模型、神经网络架构、交互式深度学习、计算机图形学"},{"title":"标签","date":"2023-05-18T08:07:04.950Z","updated":"2023-05-18T08:07:04.950Z","comments":false,"path":"tags/index.html","permalink":"https://zade23.github.io/tags/index.html","excerpt":"","text":""},{"title":"Repositories","date":"2023-05-18T03:53:31.018Z","updated":"2023-05-18T03:53:31.018Z","comments":false,"path":"repository/index.html","permalink":"https://zade23.github.io/repository/index.html","excerpt":"","text":""},{"title":"分类","date":"2023-05-18T08:06:17.850Z","updated":"2023-05-18T08:06:17.850Z","comments":false,"path":"categories/index.html","permalink":"https://zade23.github.io/categories/index.html","excerpt":"","text":""}],"posts":[{"title":"Python条件判断的优先级","slug":"Python条件判断的优先级","date":"2023-07-06T12:53:13.000Z","updated":"2023-07-06T13:00:54.121Z","comments":true,"path":"2023/07/06/Python条件判断的优先级/","link":"","permalink":"https://zade23.github.io/2023/07/06/Python%E6%9D%A1%E4%BB%B6%E5%88%A4%E6%96%AD%E7%9A%84%E4%BC%98%E5%85%88%E7%BA%A7/","excerpt":"","text":"背景做LeetCode的时候经常能够发现很多基本功不扎实的问题。这一次是在做一道简单题时候忽视的条件判断优先级的问题 题目连接：https://leetcode.cn/problems/count-the-number-of-vowel-strings-in-range 代码部分 问题代码12345678910class Solution: def vowelStrings(self, words: List[str], left: int, right: int) -&gt; int: words = words[left : right + 1] n = len(words) print(n) res = 0 for i in range(n): if words[i][0] == &#x27;a&#x27; or words[i][0] == &#x27;e&#x27; or words[i][0] == &#x27;i&#x27; or words[i][0] == &#x27;o&#x27; or words[i][0] == &#x27;u&#x27; and words[i][-1] == &#x27;a&#x27; or words[i][-1] == &#x27;e&#x27; or words[i][-1] == &#x27;i&#x27; or words[i][-1] == &#x27;o&#x27; or words[i][-1] == &#x27;u&#x27;: res += 1 return res 正确代码1234567891011class Solution: def vowelStrings(self, words: List[str], left: int, right: int) -&gt; int: words = words[left : right + 1] n = len(words) print(n) res = 0 for i in range(n): if words[i][0] == &#x27;a&#x27; or words[i][0] == &#x27;e&#x27; or words[i][0] == &#x27;i&#x27; or words[i][0] == &#x27;o&#x27; or words[i][0] == &#x27;u&#x27;: if words[i][-1] == &#x27;a&#x27; or words[i][-1] == &#x27;e&#x27; or words[i][-1] == &#x27;i&#x27; or words[i][-1] == &#x27;o&#x27; or words[i][-1] == &#x27;u&#x27;: res += 1 return res 二者的差别就在如何衔接 or 和 and 之间的关系上。 具体分析分析错误代码的bug： 在第二段错误代码中，条件判断部分存在问题。以下是有问题的代码片段： 12if words[i][0] == &#x27;a&#x27; or words[i][0] == &#x27;e&#x27; or words[i][0] == &#x27;i&#x27; or words[i][0] == &#x27;o&#x27; or words[i][0] == &#x27;u&#x27; and words[i][-1] == &#x27;a&#x27; or words[i][-1] == &#x27;e&#x27; or words[i][-1] == &#x27;i&#x27; or words[i][-1] == &#x27;o&#x27; or words[i][-1] == &#x27;u&#x27;: res += 1 问题出在逻辑运算符的优先级上。在Python中，and 运算符的优先级高于 or 运算符，因此该条件判断实际上被解释为： 12if words[i][0] == &#x27;a&#x27; or words[i][0] == &#x27;e&#x27; or words[i][0] == &#x27;i&#x27; or words[i][0] == &#x27;o&#x27; or (words[i][0] == &#x27;u&#x27; and words[i][-1] == &#x27;a&#x27;) or words[i][-1] == &#x27;e&#x27; or words[i][-1] == &#x27;i&#x27; or words[i][-1] == &#x27;o&#x27; or words[i][-1] == &#x27;u&#x27;: res += 1 由于 or 运算符的短路特性，只要 words[i][0] 的首字母为元音字母之一，整个条件判断就会被认为是True，导致res增加。而第二个部分 words[i][-1] == &#39;a&#39;、words[i][-1] == &#39;e&#39;等都是单独的条件，不会影响整个条件判断的结果。 修正该bug的方法是使用括号明确指定条件的分组，确保逻辑关系正确。以下是修正后的代码： 12if (words[i][0] == &#x27;a&#x27; or words[i][0] == &#x27;e&#x27; or words[i][0] == &#x27;i&#x27; or words[i][0] == &#x27;o&#x27; or words[i][0] == &#x27;u&#x27;) and (words[i][-1] == &#x27;a&#x27; or words[i][-1] == &#x27;e&#x27; or words[i][-1] == &#x27;i&#x27; or words[i][-1] == &#x27;o&#x27; or words[i][-1] == &#x27;u&#x27;): res += 1 这样修改后，条件判断会首先检查首字母是否为元音字母，然后再检查末尾字母是否为元音字母，两个条件都满足时才会增加res的值。","categories":[],"tags":[{"name":"Algorithm","slug":"Algorithm","permalink":"https://zade23.github.io/tags/Algorithm/"}]},{"title":"排列公式和组合公式的详细证明","slug":"排列公式和组合公式的详细证明","date":"2023-05-19T07:08:26.000Z","updated":"2023-05-19T09:03:09.086Z","comments":false,"path":"2023/05/19/排列公式和组合公式的详细证明/","link":"","permalink":"https://zade23.github.io/2023/05/19/%E6%8E%92%E5%88%97%E5%85%AC%E5%BC%8F%E5%92%8C%E7%BB%84%E5%90%88%E5%85%AC%E5%BC%8F%E7%9A%84%E8%AF%A6%E7%BB%86%E8%AF%81%E6%98%8E/","excerpt":"","text":"写文章的原因：LeetCode上又一次遇到了 公式表达相关参考 【数学排列组合】 P&amp;C 5S 公式证明 【数学 《排列组合 公式推导》 师大（白某烁请查收）】","categories":[{"name":"数学","slug":"数学","permalink":"https://zade23.github.io/categories/%E6%95%B0%E5%AD%A6/"}],"tags":[{"name":"LeetCode","slug":"LeetCode","permalink":"https://zade23.github.io/tags/LeetCode/"},{"name":"Algorithm","slug":"Algorithm","permalink":"https://zade23.github.io/tags/Algorithm/"}]},{"title":"your-first-post","slug":"your-first-post","date":"2023-05-16T09:45:58.000Z","updated":"2023-05-19T07:20:14.764Z","comments":false,"path":"2023/05/16/your-first-post/","link":"","permalink":"https://zade23.github.io/2023/05/16/your-first-post/","excerpt":"","text":"","categories":[{"name":"whatever","slug":"whatever","permalink":"https://zade23.github.io/categories/whatever/"}],"tags":[{"name":"test","slug":"test","permalink":"https://zade23.github.io/tags/test/"}]},{"title":"Hello World","slug":"hello-world","date":"2023-05-16T09:45:58.000Z","updated":"2023-05-19T07:20:20.118Z","comments":false,"path":"2023/05/16/hello-world/","link":"","permalink":"https://zade23.github.io/2023/05/16/hello-world/","excerpt":"","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new &quot;My New Post&quot; More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment","categories":[{"name":"whatever","slug":"whatever","permalink":"https://zade23.github.io/categories/whatever/"}],"tags":[{"name":"Hexo","slug":"Hexo","permalink":"https://zade23.github.io/tags/Hexo/"}]}],"categories":[{"name":"数学","slug":"数学","permalink":"https://zade23.github.io/categories/%E6%95%B0%E5%AD%A6/"},{"name":"whatever","slug":"whatever","permalink":"https://zade23.github.io/categories/whatever/"}],"tags":[{"name":"Algorithm","slug":"Algorithm","permalink":"https://zade23.github.io/tags/Algorithm/"},{"name":"LeetCode","slug":"LeetCode","permalink":"https://zade23.github.io/tags/LeetCode/"},{"name":"test","slug":"test","permalink":"https://zade23.github.io/tags/test/"},{"name":"Hexo","slug":"Hexo","permalink":"https://zade23.github.io/tags/Hexo/"}]}