<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>ANdRoid&#39;s BLOG</title>
  
  <subtitle>MaTRix</subtitle>
  <link href="https://zade23.github.io/atom.xml" rel="self"/>
  
  <link href="https://zade23.github.io/"/>
  <updated>2023-07-06T13:00:54.121Z</updated>
  <id>https://zade23.github.io/</id>
  
  <author>
    <name>Android</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Python条件判断的优先级</title>
    <link href="https://zade23.github.io/2023/07/06/Python%E6%9D%A1%E4%BB%B6%E5%88%A4%E6%96%AD%E7%9A%84%E4%BC%98%E5%85%88%E7%BA%A7/"/>
    <id>https://zade23.github.io/2023/07/06/Python%E6%9D%A1%E4%BB%B6%E5%88%A4%E6%96%AD%E7%9A%84%E4%BC%98%E5%85%88%E7%BA%A7/</id>
    <published>2023-07-06T12:53:13.000Z</published>
    <updated>2023-07-06T13:00:54.121Z</updated>
    
    <content type="html"><![CDATA[<h2 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h2><p>做LeetCode的时候经常能够发现很多基本功不扎实的问题。<br>这一次是在做一道简单题时候忽视的<strong>条件判断</strong>优先级的问题</p><blockquote><p>题目连接：<a href="https://leetcode.cn/problems/count-the-number-of-vowel-strings-in-range">https://leetcode.cn/problems/count-the-number-of-vowel-strings-in-range</a></p></blockquote><h2 id="代码部分"><a href="#代码部分" class="headerlink" title="代码部分"></a>代码部分</h2><hr><h3 id="问题代码"><a href="#问题代码" class="headerlink" title="问题代码"></a>问题代码</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span>:</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">vowelStrings</span>(<span class="params">self, words: <span class="type">List</span>[<span class="built_in">str</span>], left: <span class="built_in">int</span>, right: <span class="built_in">int</span></span>) -&gt; <span class="built_in">int</span>:</span><br><span class="line">        words = words[left : right + <span class="number">1</span>]</span><br><span class="line">        n = <span class="built_in">len</span>(words)</span><br><span class="line">        <span class="built_in">print</span>(n)</span><br><span class="line">        res = <span class="number">0</span></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(n):</span><br><span class="line">            <span class="keyword">if</span> words[i][<span class="number">0</span>] == <span class="string">&#x27;a&#x27;</span> <span class="keyword">or</span> words[i][<span class="number">0</span>] == <span class="string">&#x27;e&#x27;</span> <span class="keyword">or</span> words[i][<span class="number">0</span>] == <span class="string">&#x27;i&#x27;</span> <span class="keyword">or</span> words[i][<span class="number">0</span>] == <span class="string">&#x27;o&#x27;</span> <span class="keyword">or</span> words[i][<span class="number">0</span>] == <span class="string">&#x27;u&#x27;</span> <span class="keyword">and</span> words[i][-<span class="number">1</span>] == <span class="string">&#x27;a&#x27;</span> <span class="keyword">or</span> words[i][-<span class="number">1</span>] == <span class="string">&#x27;e&#x27;</span> <span class="keyword">or</span> words[i][-<span class="number">1</span>] == <span class="string">&#x27;i&#x27;</span> <span class="keyword">or</span> words[i][-<span class="number">1</span>] == <span class="string">&#x27;o&#x27;</span> <span class="keyword">or</span> words[i][-<span class="number">1</span>] == <span class="string">&#x27;u&#x27;</span>:</span><br><span class="line">                res += <span class="number">1</span></span><br><span class="line">        <span class="keyword">return</span> res</span><br></pre></td></tr></table></figure><h3 id="正确代码"><a href="#正确代码" class="headerlink" title="正确代码"></a>正确代码</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span>:</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">vowelStrings</span>(<span class="params">self, words: <span class="type">List</span>[<span class="built_in">str</span>], left: <span class="built_in">int</span>, right: <span class="built_in">int</span></span>) -&gt; <span class="built_in">int</span>:</span><br><span class="line">        words = words[left : right + <span class="number">1</span>]</span><br><span class="line">        n = <span class="built_in">len</span>(words)</span><br><span class="line">        <span class="built_in">print</span>(n)</span><br><span class="line">        res = <span class="number">0</span></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(n):</span><br><span class="line">            <span class="keyword">if</span> words[i][<span class="number">0</span>] == <span class="string">&#x27;a&#x27;</span> <span class="keyword">or</span> words[i][<span class="number">0</span>] == <span class="string">&#x27;e&#x27;</span> <span class="keyword">or</span> words[i][<span class="number">0</span>] == <span class="string">&#x27;i&#x27;</span> <span class="keyword">or</span> words[i][<span class="number">0</span>] == <span class="string">&#x27;o&#x27;</span> <span class="keyword">or</span> words[i][<span class="number">0</span>] == <span class="string">&#x27;u&#x27;</span>:</span><br><span class="line">                <span class="keyword">if</span> words[i][-<span class="number">1</span>] == <span class="string">&#x27;a&#x27;</span> <span class="keyword">or</span> words[i][-<span class="number">1</span>] == <span class="string">&#x27;e&#x27;</span> <span class="keyword">or</span> words[i][-<span class="number">1</span>] == <span class="string">&#x27;i&#x27;</span> <span class="keyword">or</span> words[i][-<span class="number">1</span>] == <span class="string">&#x27;o&#x27;</span> <span class="keyword">or</span> words[i][-<span class="number">1</span>] == <span class="string">&#x27;u&#x27;</span>:</span><br><span class="line">                    res += <span class="number">1</span></span><br><span class="line">        <span class="keyword">return</span> res</span><br></pre></td></tr></table></figure><p>二者的差别就在如何衔接 <code>or</code> 和 <code>and</code> 之间的关系上。</p><h2 id="具体分析"><a href="#具体分析" class="headerlink" title="具体分析"></a>具体分析</h2><p>分析错误代码的bug：</p><p>在第二段错误代码中，条件判断部分存在问题。以下是有问题的代码片段：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> words[i][<span class="number">0</span>] == <span class="string">&#x27;a&#x27;</span> <span class="keyword">or</span> words[i][<span class="number">0</span>] == <span class="string">&#x27;e&#x27;</span> <span class="keyword">or</span> words[i][<span class="number">0</span>] == <span class="string">&#x27;i&#x27;</span> <span class="keyword">or</span> words[i][<span class="number">0</span>] == <span class="string">&#x27;o&#x27;</span> <span class="keyword">or</span> words[i][<span class="number">0</span>] == <span class="string">&#x27;u&#x27;</span> <span class="keyword">and</span> words[i][-<span class="number">1</span>] == <span class="string">&#x27;a&#x27;</span> <span class="keyword">or</span> words[i][-<span class="number">1</span>] == <span class="string">&#x27;e&#x27;</span> <span class="keyword">or</span> words[i][-<span class="number">1</span>] == <span class="string">&#x27;i&#x27;</span> <span class="keyword">or</span> words[i][-<span class="number">1</span>] == <span class="string">&#x27;o&#x27;</span> <span class="keyword">or</span> words[i][-<span class="number">1</span>] == <span class="string">&#x27;u&#x27;</span>:</span><br><span class="line">    res += <span class="number">1</span></span><br></pre></td></tr></table></figure><p>问题出在逻辑运算符的优先级上。在Python中，<code>and</code> 运算符的优先级高于 <code>or</code> 运算符，因此该条件判断实际上被解释为：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> words[i][<span class="number">0</span>] == <span class="string">&#x27;a&#x27;</span> <span class="keyword">or</span> words[i][<span class="number">0</span>] == <span class="string">&#x27;e&#x27;</span> <span class="keyword">or</span> words[i][<span class="number">0</span>] == <span class="string">&#x27;i&#x27;</span> <span class="keyword">or</span> words[i][<span class="number">0</span>] == <span class="string">&#x27;o&#x27;</span> <span class="keyword">or</span> (words[i][<span class="number">0</span>] == <span class="string">&#x27;u&#x27;</span> <span class="keyword">and</span> words[i][-<span class="number">1</span>] == <span class="string">&#x27;a&#x27;</span>) <span class="keyword">or</span> words[i][-<span class="number">1</span>] == <span class="string">&#x27;e&#x27;</span> <span class="keyword">or</span> words[i][-<span class="number">1</span>] == <span class="string">&#x27;i&#x27;</span> <span class="keyword">or</span> words[i][-<span class="number">1</span>] == <span class="string">&#x27;o&#x27;</span> <span class="keyword">or</span> words[i][-<span class="number">1</span>] == <span class="string">&#x27;u&#x27;</span>:</span><br><span class="line">    res += <span class="number">1</span></span><br></pre></td></tr></table></figure><p>由于 <code>or</code> 运算符的短路特性，只要 <code>words[i][0]</code> 的首字母为元音字母之一，整个条件判断就会被认为是True，导致res增加。而第二个部分 <code>words[i][-1] == &#39;a&#39;</code>、<code>words[i][-1] == &#39;e&#39;</code>等都是单独的条件，不会影响整个条件判断的结果。</p><p>修正该bug的方法是使用括号明确指定条件的分组，确保逻辑关系正确。以下是修正后的代码：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (words[i][<span class="number">0</span>] == <span class="string">&#x27;a&#x27;</span> <span class="keyword">or</span> words[i][<span class="number">0</span>] == <span class="string">&#x27;e&#x27;</span> <span class="keyword">or</span> words[i][<span class="number">0</span>] == <span class="string">&#x27;i&#x27;</span> <span class="keyword">or</span> words[i][<span class="number">0</span>] == <span class="string">&#x27;o&#x27;</span> <span class="keyword">or</span> words[i][<span class="number">0</span>] == <span class="string">&#x27;u&#x27;</span>) <span class="keyword">and</span> (words[i][-<span class="number">1</span>] == <span class="string">&#x27;a&#x27;</span> <span class="keyword">or</span> words[i][-<span class="number">1</span>] == <span class="string">&#x27;e&#x27;</span> <span class="keyword">or</span> words[i][-<span class="number">1</span>] == <span class="string">&#x27;i&#x27;</span> <span class="keyword">or</span> words[i][-<span class="number">1</span>] == <span class="string">&#x27;o&#x27;</span> <span class="keyword">or</span> words[i][-<span class="number">1</span>] == <span class="string">&#x27;u&#x27;</span>):</span><br><span class="line">    res += <span class="number">1</span></span><br></pre></td></tr></table></figure><p>这样修改后，条件判断会首先检查首字母是否为元音字母，然后再检查末尾字母是否为元音字母，两个条件都满足时才会增加res的值。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;背景&quot;&gt;&lt;a href=&quot;#背景&quot; class=&quot;headerlink&quot; title=&quot;背景&quot;&gt;&lt;/a&gt;背景&lt;/h2&gt;&lt;p&gt;做LeetCode的时候经常能够发现很多基本功不扎实的问题。&lt;br&gt;这一次是在做一道简单题时候忽视的&lt;strong&gt;条件判断&lt;/strong</summary>
      
    
    
    
    
    <category term="Algorithm" scheme="https://zade23.github.io/tags/Algorithm/"/>
    
  </entry>
  
  <entry>
    <title>排列公式和组合公式的详细证明</title>
    <link href="https://zade23.github.io/2023/05/19/%E6%8E%92%E5%88%97%E5%85%AC%E5%BC%8F%E5%92%8C%E7%BB%84%E5%90%88%E5%85%AC%E5%BC%8F%E7%9A%84%E8%AF%A6%E7%BB%86%E8%AF%81%E6%98%8E/"/>
    <id>https://zade23.github.io/2023/05/19/%E6%8E%92%E5%88%97%E5%85%AC%E5%BC%8F%E5%92%8C%E7%BB%84%E5%90%88%E5%85%AC%E5%BC%8F%E7%9A%84%E8%AF%A6%E7%BB%86%E8%AF%81%E6%98%8E/</id>
    <published>2023-05-19T07:08:26.000Z</published>
    <updated>2023-05-19T09:03:09.086Z</updated>
    
    <content type="html"><![CDATA[<p>写文章的原因：LeetCode上又一次遇到了</p><h2 id="公式表达"><a href="#公式表达" class="headerlink" title="公式表达"></a>公式表达</h2><h2 id="相关参考"><a href="#相关参考" class="headerlink" title="相关参考"></a>相关参考</h2><ul><li><a href="https://youtu.be/VZkTphCESqQ">【数学排列组合】 P&amp;C 5S 公式证明</a></li><li><a href="https://www.bilibili.com/video/BV1bW41117Na/?share_source=copy_web&vd_source=48383e849d4fc23ac2e38278a3df1b87">【数学 《排列组合 公式推导》 师大（白某烁请查收）】 </a></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;写文章的原因：LeetCode上又一次遇到了&lt;/p&gt;
&lt;h2 id=&quot;公式表达&quot;&gt;&lt;a href=&quot;#公式表达&quot; class=&quot;headerlink&quot; title=&quot;公式表达&quot;&gt;&lt;/a&gt;公式表达&lt;/h2&gt;&lt;h2 id=&quot;相关参考&quot;&gt;&lt;a href=&quot;#相关参考&quot; class</summary>
      
    
    
    
    <category term="数学" scheme="https://zade23.github.io/categories/%E6%95%B0%E5%AD%A6/"/>
    
    
    <category term="LeetCode" scheme="https://zade23.github.io/tags/LeetCode/"/>
    
    <category term="Algorithm" scheme="https://zade23.github.io/tags/Algorithm/"/>
    
  </entry>
  
  <entry>
    <title>your-first-post</title>
    <link href="https://zade23.github.io/2023/05/16/your-first-post/"/>
    <id>https://zade23.github.io/2023/05/16/your-first-post/</id>
    <published>2023-05-16T09:45:58.000Z</published>
    <updated>2023-05-19T07:20:14.764Z</updated>
    
    
    
    
    <category term="whatever" scheme="https://zade23.github.io/categories/whatever/"/>
    
    
    <category term="test" scheme="https://zade23.github.io/tags/test/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="https://zade23.github.io/2023/05/16/hello-world/"/>
    <id>https://zade23.github.io/2023/05/16/hello-world/</id>
    <published>2023-05-16T09:45:58.000Z</published>
    <updated>2023-05-19T07:20:20.118Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.io/docs/&quot;&gt;documentation&lt;/a&gt; for</summary>
      
    
    
    
    <category term="whatever" scheme="https://zade23.github.io/categories/whatever/"/>
    
    
    <category term="Hexo" scheme="https://zade23.github.io/tags/Hexo/"/>
    
  </entry>
  
</feed>
